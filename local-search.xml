<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>github上显示图片</title>
    <link href="/2022/05/10/github%E4%B8%8A%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/"/>
    <url>/2022/05/10/github%E4%B8%8A%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<h2 id="在github上显示图片">在github上显示图片</h2><p>（1）首先在你的本地项目目录下新建一个Screenshots文件夹，用于来存放需要显示的图片，我放入1.png一张图片；</p><p>（2）在本地编辑.md文件，来引用这张图片，引用图片的语法如下：</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">![Alt text](https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/用户名/</span>repository仓库名<span class="hljs-regexp">/raw/</span>分支名<span class="hljs-regexp">/存放图片的文件夹名/</span>.png .jpg)<br></code></pre></div></td></tr></table></figure><p>（3）最后把你的项目提交或者更新到Github上时，Github会自动解析这个语法，并把图片在.md文件中显示出来。</p><p>(4)  同时你会发现本地.md文件也可以解析文件地址，此时就可以愉快地删除本地文件了！因为这一操作等价于将图片上传到服务器上。</p>]]></content>
    
    
    <categories>
      
      <category>开发环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+fluid使用指南</title>
    <link href="/2022/05/10/hexo-fluid%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2022/05/10/hexo-fluid%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo命令整理">Hexo命令整理</h2><h4 id="更新博客">更新博客</h4><figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></div></td></tr></table></figure><h4 id="创建文章">创建文章</h4><p>执行如下命令创建一篇新文章，名为《测试文章》</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">hexo new post 测试文章<br></code></pre></div></td></tr></table></figure><p>执行完成后在<code>source\_posts</code>目录下生成了一个<code>.md</code>文件和一个同名的资源目录(用于存放图片)。</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">测试文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2021-06-10 16:35:20</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">原创</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Javascript</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这是一篇测试文章</span><br><span class="hljs-type">![</span><span class="hljs-string">图片引用方法三](test.png)</span><br></code></pre></div></td></tr></table></figure><h4 id="删除文章">删除文章</h4><p>直接删除本地文件，然后更新博客。</p><h4 id="在文章里面显示图片">在文章里面显示图片</h4><p>插件<code>hexo-renderer-marked</code>解决了这个问题。可以只用<code>npm install hexo-renderer-marked</code>命令直接安装，之后在<code>config.yaml</code>中更改配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">marked:</span><br>  <span class="hljs-attr">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">postAsset:</span> <span class="hljs-literal">true</span><br></code></pre></div></td></tr></table></figure><p>之后就可以在使用<code>![](test.jpg)</code>的方式愉快的插入图片了。</p><h2 id="Hexo-fluid美化">Hexo+fluid美化</h2><h3 id="1-友链设置">1. 友链设置</h3><p>友情链接页用于展示好友的博客入口，默认关闭，开启需要先在 <code>navbar</code> 项中将 <code>links</code> 的注释(#号)删掉。</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;links&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;/links/&#x27;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-link-fill&#x27;</span> &#125;<br><span class="hljs-string">Copy</span><br></code></pre></div></td></tr></table></figure><p>然后找到 <code>links</code> 的配置项，对页面内容进行配置：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">links:</span><br>  <span class="hljs-attr">items:</span><br>    <span class="hljs-bullet">-</span> &#123;<br>      <span class="hljs-attr">title:</span> <span class="hljs-string">&#x27;Fluid Docs&#x27;</span>,<br>      <span class="hljs-attr">intro:</span> <span class="hljs-string">&#x27;主题使用指南&#x27;</span>,<br>      <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/docs/&#x27;</span>,<br>      <span class="hljs-attr">image:</span> <span class="hljs-string">&#x27;/img/favicon.png&#x27;</span><br>    &#125;<br><span class="hljs-string">Copy</span><br></code></pre></div></td></tr></table></figure><ul><li><code>title</code>: 友链站的标题</li><li><code>intro</code>: 站点或博主的简介，可省略</li><li><code>link</code>: 跳转链接</li><li><code>image</code>: 头像图片，可省略</li></ul><h3 id="2-hexo支持emoji">2.hexo支持emoji</h3><p>首先进入博客目录,卸载<code>hexo</code>默认的marked渲染器，安装markdown-it渲染器，运行的命令如：</p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">cd Documents/blog<br>npm un hexo-renderer-marked <span class="hljs-comment">--save</span><br>npm i hexo-renderer-markdown-<span class="hljs-keyword">it</span> <span class="hljs-comment">--save</span><br></code></pre></div></td></tr></table></figure><p>之后安装<code>markdown-it-emoji</code>插件：</p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">npm install markdown-<span class="hljs-keyword">it</span>-emoji <span class="hljs-comment">--save</span><br></code></pre></div></td></tr></table></figure><p>这里的站点配置文件是指位于博客根目录下的 <code>_config.yml</code>，编辑它，然后在末尾添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-comment">## Markdown-it config</span><br><span class="hljs-comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span><br><span class="hljs-attr">markdown:</span><br>  <span class="hljs-attr">render:</span><br>    <span class="hljs-attr">html:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">xhtmlOut:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">breaks:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">linkify:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">typographer:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">quotes:</span> <span class="hljs-string">&#x27;“”‘’&#x27;</span><br>  <span class="hljs-attr">plugins:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">markdown-it-abbr</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">markdown-it-footnote</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">markdown-it-ins</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">markdown-it-sub</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">markdown-it-sup</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">markdown-it-emoji</span>  <span class="hljs-comment"># add emoji</span><br>  <span class="hljs-attr">anchors:</span><br>    <span class="hljs-attr">level:</span> <span class="hljs-number">2</span><br>    <span class="hljs-attr">collisionSuffix:</span> <span class="hljs-string">&#x27;v&#x27;</span><br>    <span class="hljs-attr">permalink:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">permalinkClass:</span> <span class="hljs-string">header-anchor</span><br>    <span class="hljs-attr">permalinkSymbol:</span> <span class="hljs-string">¶</span><br></code></pre></div></td></tr></table></figure><p>在anchors这里配置需要小心，我不是很喜欢这个风格，于是就删去了。</p><h3 id="3-生成站点地图">3.生成站点地图</h3><ol><li>安装站点地图生成插件</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-generator-<span class="hljs-keyword">baidu-sitemap </span>--save<br>npm <span class="hljs-keyword">install </span>hexo-generator-sitemap --save<br></code></pre></div></td></tr></table></figure><ol start="2"><li>在博客根目录的<code>_config.yml</code>中添加自动生成sitemap的配置</li></ol><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">sitemap:</span><br><span class="hljs-symbol">  path:</span> sitemap.xml<br><span class="hljs-symbol">baidusitemap:</span><br><span class="hljs-symbol">  path:</span> baidusitemap.xml<br></code></pre></div></td></tr></table></figure><p>同时确认一下该文件里面url对应的是否是接下来要提交的域名</p><ol start="3"><li>生成和部署</li></ol><figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></div></td></tr></table></figure><p>此时会在<code>public</code>目录下生成两个文件</p><blockquote><p><code>sitemap.xml</code> 用于提交给谷歌</p><p><code>baidusitemap.xml</code> 用于提交给百度</p></blockquote><p>部署成功后，在浏览器打开 <code>你的域名/baidusitemap.xml</code>，成功展示即代表成功</p><p><img src="test.png" alt="部署测试"></p><h4 id="百度收录">百度收录</h4><p><strong>开发目的（摘录）：</strong></p><p>某些主机，比如Github，禁止百度爬虫访问博客，导致博客无法被百度收录。多亏百度提供了主动提交的接口，这才有了个补救的方法。</p><p>除此之外， 使用主动推送还会达到如下功效：</p><ul><li>及时发现：可以缩短百度爬虫发现您站点新链接的时间，使新发布的页面可以在第一时间被百度收录</li><li>保护原创：对于网站的最新原创内容，使用主动推送功能可以快速通知到百度，使内容可以在转发之前被百度发现</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-<span class="hljs-keyword">baidu-url-submit </span>--save<br></code></pre></div></td></tr></table></figure><p>配置根目录_config.yml写入以下配置：</p><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">baidu_url_submit:</span><br><span class="hljs-symbol">  count:</span> <span class="hljs-number">100</span>                          <span class="hljs-meta"># 提交最新的多少个链接</span><br><span class="hljs-symbol">  host:</span> https:<span class="hljs-comment">//yourname.gitee.io/    # 在百度站长平台中添加的域名</span><br><span class="hljs-symbol">  token:</span> your_token               <span class="hljs-meta"># 秘钥</span><br><span class="hljs-symbol">  path:</span> baidu_urls.txt                <span class="hljs-meta"># 文本文档的地址,新链接会保存在此文本文档里Copy</span><br></code></pre></div></td></tr></table></figure><p>修改<strong>站点url为自己购买的域名</strong>，最后获取token配置提交方案：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span> <span class="hljs-comment">## 这是原来的deployer</span><br>  <span class="hljs-attr">repo:</span><br>  <span class="hljs-attr">branch:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">baidu_url_submitter</span> <span class="hljs-comment">## 在这里添加新内容即可</span><br></code></pre></div></td></tr></table></figure><p>可以看出是增加了一个提交的type，然后执行部署提交的时候就可以实现主动推送了</p><p>同时在<code>hexo\.deploy_git\</code>路径下会生成一个<code>baidu_urls.txt</code>文件，其中包含了你站点中的URL链接。</p><p><strong>如何获取百度收录的token?</strong></p><p>您得注册百度站长工具，然后在<strong>工具-&gt;网页抓取-&gt;链接提交</strong>里找到你的密匙。</p><p>在注册百度站长工具的时候，需要我们验证个人信息、添加网站域名。</p><p><img src="%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%AB%99.png" alt="添加网站"></p><p>然后验证网站所有权。有三种方式：（我选择了第一种）</p><ol><li>文件验证。</li><li>HTML标签验证。</li><li>CNAME验证</li></ol><p><img src="%E9%AA%8C%E8%AF%81%E7%BD%91%E7%AB%99.png" alt="验证网站，找来的图有点糊"></p><p>下载文件，放在<code>themes/fluid/source</code>(或者其他主题的source目录下面)</p><p><strong>为什么放到主题的source下而不直接放在站点source下面呢？</strong></p><p>因为站点source下面的html文件都会被按照主题样式重新渲染，最后html文件的内容会被改变，百度验证就不能识别。</p><p><img src="your_token.png" alt="获取token"></p><p><strong>再次生成和部署</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></div></td></tr></table></figure><p><img src="success.png" alt="成功推送"></p><h4 id="谷歌收录">谷歌收录</h4><p><a href="search.google.com/search-console">谷歌搜索域名提交网站</a></p><p><img src="%E8%B0%B7%E6%AD%8C%E6%8F%90%E4%BA%A4%E7%BD%91%E7%AB%99.png" alt="谷歌添加网站"></p><p>然后需要验证，与百度验证的方式相同，下载文件放在<code>themes/fluid/source</code>(或者其他主题的source目录下面)</p><p><strong>生成和部署</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></div></td></tr></table></figure><p><img src="%E5%AE%8C%E6%88%90%E6%94%B6%E5%BD%95%E5%90%8E%E7%AD%89%E5%BE%85.png" alt="完成网站提交后需要等一天..."></p>]]></content>
    
    
    <categories>
      
      <category>开发环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>整理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js中===和==</title>
    <link href="/2022/05/09/js%E4%B8%AD-%E5%92%8C/"/>
    <url>/2022/05/09/js%E4%B8%AD-%E5%92%8C/</url>
    
    <content type="html"><![CDATA[<h1>JavaScript 中 == 和 === 的区别</h1><p>和其他语言有些不同，在 JavaScript 中除了用<code>==</code>操作符来判断是否相等外，还有一个<code>===</code>操作符，它们的区别是：<code>==</code>操作符会先将两边的值进行强制类型转换再比较是否相等，而<code>===</code>操作符不会进行类型转换。<code>==</code>操作符只要求比较两个值是否相等，而<code>===</code>操作符不仅要求值相等，而且要求类型相同。<code>!=</code>和<code>!==</code>的区别也是类似的，<code>!=</code>号会做强制类型转换，而<code>!==</code>不会。</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-number">55</span> == <span class="hljs-string">&#x27;55&#x27;</span><br><span class="hljs-comment">// true</span><br><span class="hljs-number">55</span> === <span class="hljs-string">&#x27;55&#x27;</span><br><span class="hljs-comment">// false</span><br></code></pre></div></td></tr></table></figure><p>第一个操作数是数值类型的<code>55</code>，第二个操作数是字符串类型的<code>&quot;55&quot;</code>。当一个操作数是字符串，另一个操作数是数值的时候，操作符<code>==</code>会把字符串转换成数值，所以结果就返回了<code>true</code>。而<code>===</code>不会做强制转换，所以数值类型的<code>55</code>和字符串类型的<code>&quot;55&quot;</code>当然是不相等的了。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-title class_">NaN</span> == <span class="hljs-title class_">NaN</span><br><span class="hljs-comment">// false</span><br><span class="hljs-title class_">NaN</span> === <span class="hljs-title class_">NaN</span><br><span class="hljs-comment">// false</span><br></code></pre></div></td></tr></table></figure><p>这里有一个特殊值<code>NaN</code>，即 Not a Number，表示非数字，它和任何数做相等比较，包括它自己，都会返回<code>false</code>。所以判断<code>NaN</code>最好用<code>isNaN()</code>函数。</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-literal">null</span> == <span class="hljs-literal">undefined</span><br><span class="hljs-comment">// true</span><br><span class="hljs-literal">null</span> === <span class="hljs-literal">undefined</span><br><span class="hljs-comment">// false</span><br></code></pre></div></td></tr></table></figure><p><code>null</code>也让人觉得难以理解。<code>null</code>用来表示空值，<code>undefined</code>用来表示不存在，但这在实际开发中并没有什么用，而且==和===对它们的处理也不一样。</p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Problems-Using-Arch</title>
    <link href="/2022/05/09/Problems-Using-Arch/"/>
    <url>/2022/05/09/Problems-Using-Arch/</url>
    
    <content type="html"><![CDATA[<h1>Tons of problems bitter-gourd meets when using archlinux</h1><h3 id="前言：">前言：</h3><p>为了纪念存活17天的archlinux（4.9-4.25）以及懊恼于重装系统后搭建开发环境时第二遍踩入的坑。也为了防止下一次重装系统时走入歧途，同时希望对完成装载archlinux系统后配置环境的同学提供一些帮助，bitter-gourd决定写下一些文字。</p><p>此处特别鸣谢全世界最好的❤️鲨鱼姐姐❤️</p><p><strong>一些友情链接:</strong></p><p><a href="https://www.viseator.com/2017/07/02/arch_more/">1.viseator学长archlinux下配置开发环境</a></p><p><a href="https://www.viseator.com/2017/05/17/arch_install/">2.viseator学长安装arch教程</a></p><p><a href="https://github.com/JunkFood02/Arch-Linux-Installation-Guide">3.鲨鱼姐姐安装arch教程</a></p><h3 id="4-30补充："><strong>4.30补充</strong>：</h3><p>为了纪念存活4天的archlinux(4.26-4.29)bitter-gourd决定再写点配置过程中新遇到的坑和解决方案。</p><h3 id="配置git">配置git</h3><p>1.git默认编辑器为vi，而非vim，因此建议在安装vscode后将默认编辑器转换后再打开configuration file</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">git config --global core.editor &quot;code --wait&quot;<br>git config --global -e<br></code></pre></div></td></tr></table></figure><p>2.但是我们如果需要配置git的代理，又不能打开configuration file该怎么办捏？</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">git config --global http.proxy http://<br></code></pre></div></td></tr></table></figure><h3 id="使用yay过程中遇到的困难">使用yay过程中遇到的困难</h3><p>在一个<em>天xian气de晴dan朗teng</em>的下午想yay a package 但看到这个东西。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">error: GPGME error: No data<br>error: GPGME error: No data<br>error: GPGME error: No data<br>:: Synchronising package databases...<br> core                                                                974.9 KiB  1134 KiB/s 00:01 [#########################################################] 100%<br> extra                                                               974.9 KiB  1547 KiB/s 00:01 [#########################################################] 100%<br> community                                                           974.9 KiB  1486 KiB/s 00:01 [#########################################################] 100%<br>error: GPGME error: No data<br>error: GPGME error: No data<br>error: GPGME error: No data<br></code></pre></div></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">Solution:<br>sudo rm -R /var/lib/pacman/sync<br>sudo -E pacman -Syu<br></code></pre></div></td></tr></table></figure><h3 id="安装ZShell过程中遇到的困难">安装ZShell过程中遇到的困难</h3><p>1.<a href="https://ohmyz.sh/#install">oh-my-zsh的安装</a> 需要安装curl然后直接在官网复制命令行。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">yay -Syu curl<br>sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;<br></code></pre></div></td></tr></table></figure><p>2.初次安装zsh选择设置时<s>脑抽</s>选到q，将设置界面跳过，关于如何再次打开和做处理。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">设置界面：<br>This is the Z Shell configuration function for new users,<br>zsh-newuser-install.<br>You are seeing this message because you have no zsh startup files<br>(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory<br>~).  This function can help you with a few settings that should<br>make your use of the shell easier.<br><br>You can:<br><br>(q)  Quit and do nothing.  The function will be run again next time.<br><br>(0)  Exit, creating the file ~/.zshrc containing just a comment.<br>     That will prevent this function being run again.<br><br>(1)  Continue to the main menu.<br><br>(2)  Populate your ~/.zshrc with the configuration recommended<br>     by the system administrator and exit (you will need to edit<br>     the file by hand, if so desired).<br><br>--- Type one of the keys in parentheses --- <br><br>solution:<br>autoload -U zsh-newuser-install<br>zsh-newuser-install -f<br>成功打开 zsh-new-install 的界面<br>但是会发现界面变了，需要自己配置1、2、3然后按0保存退出（本人英语水平较差，此处也遇到困难）<br></code></pre></div></td></tr></table></figure><p>3.oh-my-zsh插件通过yay安装且添加到.zshrc后报错</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">error:<br>[oh-my-zsh] plugin &#x27;zsh-autosuggestions&#x27; not found<br>[oh-my-zsh] plugin &#x27;zsh-syntax-highlighting&#x27; not found<br><br>solution:<br>git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions<br>git clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting<br><br></code></pre></div></td></tr></table></figure><p>4.在zsh中始终出现 ➜  ~ git:(master) ✗ 如何改成 ~</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">error:<br>➜  ~ git:(master) ✗<br><br>solution:<br>code .zshrc<br>PROMPT=&quot;%(?:%&#123;$fg_bold[green]%&#125;➜ :%&#123;$fg_bold[red]%&#125;➜ ) %&#123;$fg[cyan]%&#125;%c%&#123;$reset_color%&#125;&#x27;<br></code></pre></div></td></tr></table></figure><p>补充：事实上只是 git init了home目录。</p><p>5.将zsh设为默认shell</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">sudo chsh -s /bin/zsh username<br></code></pre></div></td></tr></table></figure><p>6.zsh内中文显示与git中文显示问题</p><p>发现将zsh locale设置成英文后，仍然有大量中文。</p><p>友情链接：</p><p><a href="https://wiki.archlinux.org/title/Locale_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%88%91%E7%9A%84%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AF%AD%E8%A8%80%E8%BF%98%E6%98%AF%E4%B8%8D%E5%AF%B9">https://wiki.archlinux.org/title/Locale_(简体中文)#我的系统的语言还是不对</a></p><figure class="highlight makefile"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs makefile">cd ~/.config<br>code plasma-localerc<br><br><span class="hljs-section">delete:</span><br>[Translations]<br>LANGUAGE=en_US:zh_CN<br><br><span class="hljs-section">reason:</span><br>KDE Plasma change the locale in zsh<br></code></pre></div></td></tr></table></figure><p>git设置：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">code .zshrc<br>alias git=&#x27;LANG=en_GB git&#x27;<br></code></pre></div></td></tr></table></figure><h3 id="一些有用的package">一些有用的package</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">yay -S tokei   (代码统计)<br>yay -S spectacle（截图工具，可以自己设置快捷键）<br>yay -S Yakuake  (终端模拟器,快捷键F12)<br>yay -S screenfetch (终端上显示archlinux系统信息)<br>yay -S deepin-wine-qq (qq)<br>yay -S typora  (typora)<br></code></pre></div></td></tr></table></figure><h3 id="中文输入法">中文输入法</h3><p>中文输入法需要安装<code>fcitx</code>包与<code>fcitx-im</code>集合包，再加上一个中文支持包，可以到下面这个链接中挑选一个喜欢的包装上。(推荐搜狗拼音)</p><p><a href="https://wiki.archlinux.org/index.php/fcitx#Chinese">https://wiki.archlinux.org/index.php/fcitx#Chinese</a></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">yay -S fcitx<br>yay -S fcitx-im<br>yay -S fcitx-sogoupinyin<br></code></pre></div></td></tr></table></figure><p>装完以后需要修改<code>/etc/profile</code>文件，在文件开头加入三行：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">export XMODIFIERS=&quot;@im=fcitx&quot;<br>export GTK_IM_MODULE=&quot;fcitx&quot;<br>export QT_IM_MODULE=&quot;fcitx&quot;<br></code></pre></div></td></tr></table></figure><p>倘若在安装中文输入法的过程中不小心安装某些百度输入法会发现无法使用，且每次yay都会在“searching AUR for updates”中出现如下提示(孤儿包)：</p><p><a href="https://wiki.archlinux.org/index.php/fcitx#Chinese">https://wiki.archlinux.org/index.php/fcitx#Chinese</a></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">Orphaned AUR Packages:  fcitx-baidupinyin<br><br>solution:<br>pacman -Qtdq | pacman -Rns -<br></code></pre></div></td></tr></table></figure><h3 id="系统时间">系统时间</h3><p>如果发现系统时间错乱(包括archlinux和windows)的解决方案：</p><p>友情链接：</p><p><a href="https://wiki.archlinux.org/title/System_time#Read_hardware_clock">https://wiki.archlinux.org/title/System_time#Read_hardware_clock</a></p><p><a href="https://wiki.archlinux.org/title/System_time#UTC_in_Microsoft_Windows">https://wiki.archlinux.org/title/System_time#UTC_in_Microsoft_Windows</a></p><h3 id="安装QQ">安装QQ</h3><p>友情链接：</p><p><a href="https://github.com/vufa/deepin-wine-qq-arch">https://github.com/vufa/deepin-wine-qq-arch</a></p><p>省流版：</p><p><code>deepin-wine-qq</code> 依赖<code>Multilib</code>仓库中的一些32位库，Archlinux默认没有开启 <code>Multilib</code>仓库，需要编辑<code>/etc/pacman.conf</code>，取消对应行前面的注释(<a href="https://wiki.archlinux.org/index.php/Official_repositories#multilib">Archlinux wiki</a>):</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">If you want to run 32 bit applications on your x86_64 system,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">enable</span> the multilib repositories as required here.</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">[multilib-testing]</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Include = /etc/pacman.d/mirrorlist</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">-#</span><span class="language-bash">[multilib]</span><br><span class="hljs-meta prompt_">-#</span><span class="language-bash">Include = /etc/pacman.d/mirrorlist</span><br>+[multilib]<br>+Include = /etc/pacman.d/mirrorlist<br></code></pre></div></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">yay -S deepin-wine-qq<br></code></pre></div></td></tr></table></figure><p>如果还是发现32位文件无法安装，应该是需要<code>-Syu</code></p><figure class="highlight perl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs perl">yay -Syu<br>或者上述命令改为 yay -Syu deepin-wine-<span class="hljs-keyword">qq</span><br></code></pre></div></td></tr></table></figure><p>-y 更新database<br>-u 更新系统<br>-Syu 需要一起出现！！！ 否则会出现新AUR包不匹配旧的系统。</p><p>长时间没有更新，则…喜提重装arch体验卡！</p><p>yay -Syu的时候是先更新系统再更新AUR包。</p><h3 id="VScode安装相关">VScode安装相关</h3><p>1.about failing to use contension:open in browers</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">Vscode Error : <br>Open browser failed!! Please check if you have installed the browser correctly!<br><br>solution:<br>~/.vscode/extentions/techer.open-in-browser-2.0.0/out/config.js<br>change google-chrome to google-chrome-stable<br><br>reason:<br>for google chrome in arch linux is google-chrome-stable<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>开发环境配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux命令全称</title>
    <link href="/2022/05/09/linux%E5%91%BD%E4%BB%A4%E5%85%A8%E7%A7%B0/"/>
    <url>/2022/05/09/linux%E5%91%BD%E4%BB%A4%E5%85%A8%E7%A7%B0/</url>
    
    <content type="html"><![CDATA[<h1>Linux命令缩写的全称</h1><h4 id="【前言】">【前言】</h4><p>为了方便记忆linux命令，bitter-gourd决定整理一些linux命令缩写的全称。</p><h4 id="【目录-文件】">【目录|文件】</h4><p>ls : list(列出目录内容)</p><p>pwd : print work directory(打印当前目录，现示当前工作目录的绝对路径)</p><p>cd : change directory(改变目录)</p><p>rmdir: remove directory(删除目录)</p><p>mkdir: make directory(创建目录)</p><p>rm : remove(删除目录或文件)</p><p>mv : move file (移动文件)</p><p>cp : copy file(复制文件)</p><p>cat : concatenate(连锁)</p><h4 id="【系统-权限】">【系统|权限】</h4><p>su : switch user(切换用户)</p><p>uname: unix name(用于打印当前系统相关信息)</p><p>chown: change owner(改变某和文件或目录所有者和所属的组，，)</p><p>chgrp: change group(用于改变文件或所属的用户组)</p><p>chmod: change mode(用于变更文件或目录的权限)</p><h4 id="【进程-磁盘】">【进程|磁盘】</h4><p>ps : process status(进程状态，类似于wins任务管理器)</p><p>常用参数: -auxf ps -auxf (进程现示状态)</p><p>df : disk free(显示磁盘可用空间数目信息及空间节点信息。换句话说，就是查看在任何安装的设备或目录中还剩多少自由空间)</p><p>du : disk usage(查看已使用空间)</p><h4 id="【打包管理】">【打包管理】</h4><p>rpm : redhat package manger(红帽子打包管理器)</p><p>dpkg: debian package manager</p><p>apt: advanced package tool</p><h4 id="【文件后缀】">【文件后缀】</h4><p>文件结尾的rc: resource configratin(如 .xinitrc, .bashrc等)</p><p>knnxxx/snnxxx(位于rcx.d目录下):k(kill),s(service);nn(执行顺序号);xxx(服务标识)</p><p>.a(扩展名a): archive ,static library</p><p>.s(扩展名so): shared object,dynamically linked library</p><p>.o(扩展名o): olbject file, compiled result of c/c++ source file</p><h4 id="【其他】">【其他】</h4><p>insmod: install module(载入模块)</p><p>lsmod: list modules(用于显示已加载到内核模块的状态信息)</p><p>rmmod:remove module</p><p>in -s : link -soft(创建一个软链接，相当于创建一个快捷方式)</p><p>touch man:manual</p><p>mkfs: make file system (创建linux系统文件)</p><p>fsck: file system check(用于检查并试图修复文件系统中错误)</p><p>ln : link file(用于文件创建连接分为硬盘连接和符号连接)</p><p>fg : foreground(用于后台作业放到前台终端运行)</p><p>bg : background(用于将作业放到后台运行)</p><p>umount: unmount(用于卸载已经加载的系统文件)</p><p>tar : tape archive</p><p>ldd : list dynamic dependencies</p><h4 id="【部分linux-目录-参数-缩写】">【部分linux 目录|参数 缩写】</h4><p>bin = binarines</p><p>/dev = devices</p><p>/dev = etcetera</p><p>/lib = library</p><p>/proc = processes</p><p>/sbin= superuser binaries</p><p>/tmp= temporary</p><p>/usr= unix shared resources</p><p>/var= variable</p><p>? fifo= first in ,fitst out</p><p>grub= grand unified bootloader</p><p>ifs= internal field seperators</p><p>lilo= linux loader</p><p>mysql= my是最初作者的女儿的名字，sql=structured query language</p><p>（<strong>MySQL</strong>的发明者名叫 Michael “Monty” Widenius，<strong>MySQL是</strong>以他女儿的名字“<strong>My</strong>” 来命名的。 对这位发明者来说，<strong>MySQL</strong>数据库就仿佛<strong>是</strong>他可爱的女儿。）</p><p>php= personal home page tools=php hypertext preprocessor</p><p>ps = prompt string</p><p>perl= pratical extraction and report language=pathologically eclectic rubbish lister python得名于电视剧monty python’s flying circus</p><p>tcl= tool command language</p><p>tk = toolkit</p><p>vt = video terminal</p><p>yast= yet another</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>整理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test-article</title>
    <link href="/2022/05/08/test-article/"/>
    <url>/2022/05/08/test-article/</url>
    
    <content type="html"><![CDATA[<h2 id="这是一篇测试文章">这是一篇测试文章</h2><p><img src="test.png" alt="测试图片"></p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
